service: () -> {
    addProduct: (record {name:text; description:text}, nat64, nat64) -> (variant {Ok:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}});
    addShipment: (record {to:text; from:text; productId:text}, nat64, nat64) -> (variant {Ok:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}});
    cancelShipment: (record {id:text}, nat64, nat64) -> (variant {Ok:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}});
    createPaymentOrder: () -> (variant {Ok:record {fee:nat64; status:text; memo:nat64; orderId:text; payer:principal; paid_at_block:opt nat64}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getCanisterAddress: () -> (text) query;
    getProductCount: () -> (int32) query;
    getProductDetails: (text) -> (variant {Ok:record {id:text; manufacturer:text; name:text; description:text; timestamp:nat64}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}}) query;
    getShipmentCount: () -> (int32) query;
    getShipmentDetails: (text) -> (variant {Ok:record {id:text; to:text; status:text; from:text; productId:text; timestamp:nat64}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}}) query;
    trackShipment: (record {id:text}) -> (variant {Ok:vec record {id:text; timestamp:nat64; shipmentId:text; location:record {latitude:int32; name:text; longitude:int32}}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}}) query;
    updateProduct: (record {id:text; name:text; description:text}, nat64, nat64) -> (variant {Ok:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}});
    updateShipmentStatus: (record {status:text; shipmentId:text}, nat64, nat64) -> (variant {Ok:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}; Err:variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text; Exists:text}});
}
